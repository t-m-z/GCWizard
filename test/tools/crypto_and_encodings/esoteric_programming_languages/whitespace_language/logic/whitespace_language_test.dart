import "package:flutter_test/flutter_test.dart";import 'package:gc_wizard/tools/crypto_and_encodings/esoteric_programming_languages/whitespace_language/logic/whitespace_language.dart';void main() {  var helloWorldCode = '''ssslssstsstssslttsssstlsssttsststlttsssstslsssttsttsslttssssttlsssttsttsslttsssstsslsssttsttttlttsssststlssststtsslttssssttslssstssssslttsssstttlssstttstttlttsssstssslsssttsttttlttsssstsstlssstttsstslttsssststslsssttsttsslttsssststtlsssttsstsslttssssttsslssstsssstlttssssttstlssslttsssssllsssstlslstttslsltsstsltlssssstltssslslsstllssstsllll''';  group("whitespace_language.interpreterWhitespace:", () {    List<Map<String, Object?>> _inputsToExpected = [      // {'input' : null, 'expectedOutput' : ''},      {'input' : '', 'expectedOutput' : ''},      {'input' : 'Hello, world!', 'expectedOutput' : helloWorldCode},    ];    for (var elem in _inputsToExpected) {      test('input: ${elem['input']}', () async {        var _actual = await generateWhitespace(elem['input'] as String);        expect(_actual.code, elem['expectedOutput']);      });    }  });  group("whitespace_language.decodeWhitespace:", () {    // https://vii5ard.github.io/whitespace/    var fibonacci_whitespace = '''Ask the user how	many  	   fibonacci	numbersthey want from the sequence 		 				and	printthat many one number per line.			 				     	     	     		 		 		     		    		     		 			 	     				  		     							     	     	     	 			       	  	 	   	 	 	    	     	 			 	      				 	  	 	   	 	 	     	 			   		  	     	  			 			  	  	 ''';    var helloWorldCode = '''sssttsttssltlsssssttsttssltlsssssttsttssltlssssstttststltlsssssttsttssltlsssssttsttssltlsssssttsttssltlssssstttstssltlsssssttsttssltlsssssttsttssltlssssstttstssltl'    'sssssttsttssltlsssssttsttssltlsssssttsttssltlssssstttststltlssssstttstssltlssssstttstssltlsssssttsttssltlsssssttsttssltlsssssttsttssltlsssssttsttssltlssssstttstssltlssssstttststltlssssstt'    'sttssltlsssssttsttssltlsssssttsttssltlssssstttstssltlssssstttstssltlsssssttsttssltlsssssttsttssltlssssstttstssltlsssssttsttssltlssssstttstssltlssssstttststltlssssstttstssltlssssstttstsslt'    'lsssssttsttssltlsssssttsttssltlsssssttsttssltlsssssttsttssltlssssstttstssltlsssssttsttssltlssssstttststltlsssssttsttssltlsssssttsttssltlsssssttsttssltlssssstttstssltlssssstttstssltlssssst'    'tsttssltlssssstttstssltlssssstttstssltlsssssttsttssltlsssssttsttssltlssssstttststltlssssstttstssltlssssstttstssltlsssssttsttssltlsssssttsttssltlsssssttsttssltlsssssttsttssltlssssstttstssl'    'tlssssstttstssltlssssstttststltlsssssttsttssltlsssssttsttssltlsssssttsttssltlssssstttstssltlssssstttstssltlsssssttsttssltlssssstttstssltlssssstttstssltlsssssttsttssltlsssssttsttssltlsssss'    'tttststltlssssstttstssltlssssstttstssltlsssssttsttssltlsssssttsttssltlsssssttsttssltlsssssttsttssltlsssssttstltlssssststsltlssssstttstssltlsssssttsttssltlsssssttsttssltlssssstttststltlsss'    'ssttsttssltlsssssttsttssltlsssssttsttssltlssssstttstssltlssssstttstssltlsssssttsttssltlssssstttstssltlssssstttstssltlssssstttstssltlssssstttstssltlssssstttststltlssssstttstssltlssssstttst'    'ssltlsssssttsttssltlsssssttsttssltlsssssttsttssltlsssssttsttssltlssssstttstssltlsssssttsttssltlssssstttstssltlssssstttststltlsssssttsttssltlsssssttsttssltlsssssttsttssltlssssstttstssltlss'    'sssttsttssltlssssstttstssltlssssstttstssltlsssssttsttssltlsssssttsttssltlssssstttststltlssssstttstssltlssssstttstssltlsssssttsttssltlsssssttsttssltlsssssttsttssltlsssssttsttssltlsssssttts'    'tssltlssssstttstssltlsssssttsttssltlssssstttststltlsssssttsttssltlsssssttsttssltlsssssttsttssltlssssstttstssltlsssssttsttssltlsssssttsttssltlsssssttsttssltlsssssttsttssltlsssssttsttssltls'    'sssstttststltlssssstttstssltlssssstttstssltlsssssttsttssltlsssssttsttssltlsssssttsttssltlsssssttsttssltlssssstttstssltlssssstttstssltlssssstttstssltlssssstttststltlsssssttsttssltlssssstts'    'ttssltlsssssttsttssltlssssstttstssltlssssstttstssltlssssstttstssltlsssssttsttssltlssssstttstssltlssssstttstssltlssssstttstssltlssssstttststltlssssstttstssltlssssstttstssltlsssssttsttssltl'    'sssssttsttssltlsssssttstltlssssststsltlsssssttsttssltlsssssttsttssltlssssstttstssltlsssssttsttssltlsssssttsttssltlsssssttsttssltlssssstttststltlsssssttsttssltlsssssttsttssltlsssssttsttssl'    'tlssssstttstssltlssssstttstssltlsssssttsttssltlssssstttstssltlssssstttstssltlssssstttstssltlssssstttstssltlssssstttststltlssssstttstssltlssssstttstssltlsssssttsttssltlsssssttsttssltlsssss'    'ttsttssltlsssssttsttssltlssssstttstssltlsssssttsttssltlsssssttsttssltlssssstttstssltlssssstttststltlsssssttsttssltlsssssttsttssltlsssssttsttssltlssssstttstssltlssssstttstssltlssssstttstss'    'ltlsssssttsttssltlsssssttsttssltlssssstttstssltlsssssttsttssltlssssstttststltlssssstttstssltlssssstttstssltlsssssttsttssltlsssssttsttssltlsssssttsttssltlsssssttsttssltlssssstttstssltlssss'    'sttsttssltlssssstttstssltlsssssttsttssltlssssstttststltlsssssttsttssltlsssssttsttssltlsssssttsttssltlssssstttstssltlssssstttstssltlsssssttsttssltlssssstttstssltlssssstttstssltlsssssttstts'    'sltlsssssttsttssltlssssstttststltlssssstttstssltlssssstttstssltlsssssttsttssltlsssssttsttssltlsssssttsttssltlsssssttsttssltlssssstttstssltlsssssttsttssltlssssstttstssltlssssstttstssltlsss'    'sstttststltlsssssttsttssltlsssssttsttssltlsssssttsttssltlssssstttstssltlssssstttstssltlsssssttsttssltlsssssttsttssltlsssssttstltlssssststsltlssssstttstssltlsssssttsttssltlsssssttsttssltls'    'sssstttststltlssssstttstssltlssssstttstssltlsssssttsttssltlsssssttsttssltlsssssttsttssltlsssssttsttssltlssssstttstssltlssssstttstssltlsssssttsttssltlsssssttsttssltlssssstttststltlssssstts'    'ttssltlsssssttsttssltlsssssttsttssltlssssstttstssltlsssssttsttssltlsssssttsttssltlsssssttsttssltlsssssttsttssltlssssstttstssltlssssstttststltlssssstttstssltlssssstttstssltlsssssttsttssltl'    'sssssttsttssltlsssssttsttssltlsssssttsttssltlssssstttstssltlssssstttstssltlsssssttsttssltlssssstttstssltlssssstttststltlsssssttsttssltlsssssttsttssltlsssssttsttssltlssssstttstssltlssssstt'    'tstssltlsssssttsttssltlssssstttstssltlssssstttststltlssssstttstssltlssssstttstssltlsssssttsttssltlsssssttsttssltlsssssttsttssltlsssssttsttssltlssssstttstssltlssssstttstssltlssssstttstsslt'    'lsssssttsttssltlssssstttststltlsssssttsttssltlsssssttsttssltlsssssttsttssltlssssstttstssltlsssssttsttssltlssssstttstssltlsssssttsttssltlssssstttststltlssssstttstssltlssssstttstssltlssssst'    'tsttssltlsssssttsttssltlsssssttsttssltlsssssttsttssltlssssstttstssltlssssstttstssltlssssstttstssltlssssstttstssltlssssstttststltlsssssttsttssltlsssssttsttssltlsssssttsttssltlsssssttsttssl'    'tlssssstttststltlssssstttstssltlsssssttstltlssssststsltlssssstttstssltlsssssttsttssltlsssssttsttssltlsssssttsttssltlsssssttsttssltlsssssttsttssltlssssstttststltlssssstttststltlsssssttstts'    'sltlsssssttsttssltlsssssttsttssltlsssssttsttssltlssssstttstssltlssssstttststltlsssssttsttssltlssssstttststltlsssssttsttssltlssssstttstssltlssssstttstssltlssssstttstssltlsssssttsttssltlsss'    'sstttststltlsssssttsttssltlssssstttststltlssssstttstssltlsssssttsttssltlsssssttsttssltlssssstttstssltlsssssttsttssltlssssstttststltlssssstttstssltlssssstttststltlsssssttsttssltlsssssttstt'    'ssltlsssssttsttssltlsssssttsttssltlsssssttsttssltlssssstttstssltlssssstttststltlssssstttstssltlsssssttsttssltlsssssttsttssltlsssssttsttssltlssssstttststltlsssssttsttssltlssssstttststltlss'    'sssttsttssltlsssssttsttssltlssssstttstssltlssssstttststltlssssstttststltlsssssttsttssltlsssssttsttssltlsssssttsttssltlssssstttstssltlsssssttsttssltlssssstttststltlssssstttststltlsssssttts'    'tstltlssssstttststltlssllll''';    var helloWorldOutput = '''lllullltlltllluttlllltulllttlltltuttlllltlulllttlttlluttllllttulllttlttlluttllll\r\ntllulllttlttttuttlllltltullltlttlluttllllttlullltllllluttlllltttullltttltttuttll\r\nlltlllulllttlttttuttlllltlltullltttlltluttlllltltlulllttlttlluttlllltlttulllttll\r\ntlluttllllttllullltlllltuttllllttltulllttltuttlllltttlullltltluttllllttttullllut\r\ntllllluulllltulultttlulutlltlutullllltutlllululltuullltluuuu''';    var helloWorldTextGerman ='''lllullltlltllluttlllltulllttlltltuttlllltlulllttlttlluttllllttulllttlttlluttllll tllulllttlttttuttlllltltullltlttlluttllllttlullltllllluttlllltttullltttltttuttll lltlllulllttlttttuttlllltlltullltttlltluttlllltltlulllttlttlluttlllltlttulllttll tlluttllllttllullltlllltuttllllttltulllttltuttlllltttlullltltluttllllttttullllut tllllluulllltulultttlulutlltlutullllltutlllululltuullltluuuu''';    var helloWorldTextEnglish = '''SSSLSSSTSSTSSSLTTSSSSTLSSSTTSSTSTLTTSSSSTSLSSSTTSTTSSLTTSSSSTTLSSSTTSTTSSLTTSSSSTSSLSSSTTSTTTTLTTSSSSTSTLSSSTSTTSSLTTSSSSTTSLSSSTSSSSSLTTSSSSTTTLSSSTTTSTTTLTTSSSSTSSSLSSSTTSTTTTLTTSSSSTSSTLSSSTTTSSTSLTTSSSSTSTSLSSSTTSTTSSLTTSSSSTSTTLSSSTTSSTSSLTTSSSSTTSSLSSSTSSSSTLTTSSSSTTSTLSSSTTSTLTTSSSSTTTSLSSSTSTSLTTSSSSTTTTLSSSSLTTSSSSSLLSSSSTLSLSTTTSLSLTSSTSLTLSSSSSTLTSSSLSLSSTLLSSSTSLLLL''';    var helloWorld2 = '''ssslssstsstssslttsssstlsssttsststlttsssstslsssttsttsslttssssttlsssttsttsslttsssstsslsssttsttttlttsssststlssststtsslttssssttslssstssssslttsssstttlssstttstttlttsssstsssl'    'sssttsttttlttsssstsstlssstttsstslttsssststslsssttsttsslttsssststtlsssttsstsslttssssttsslssstssssslttssssttstlsssttsttttlttsssstttslsssttssttslttssssttttlssstssssslttsssstsssslssstttssttlt'    'tsssstssstlssstttsssslttsssstsstslsssttsssstlttsssstssttlsssttsssttlttsssststsslsssttsststlttsssstststlssstttssttlttsssststtslssstsssstlttsssststttlsssslttsssssllststttstttstttsstssttstss'    'tstttstsssttsststllststtstttssttsstststttstttsttsttsssttstsststtstttssttsststlllllsssttsssststtsstsssttsstssltsssltllssstttstttstttsstssttstsststttstsssttsststlslstttslsltsstttstttstttsst'    'ssttstsststttstsssttsststststttttsttsstststtstttssttsstssltlssssstltssslslstttstttstttsstssttstsststttstsssttsststllssstttstttstttsstssttstsststttstsssttsststststttttsttsstststtstttssttss'    'tsslsllsllltllssstttsstssttsstststtsssststtsstsslslsslstltstttslsssststsltsstltsstttsstssttsstststtsssststtsstssststttttsttsstststtstttssttsstsslsllssstltssslslstttsstssttsstststtsssststt'    'sstssllssstttsstssttsstststtsssststtsstssststttttsttsstststtstttssttsstsslsllssstltssssssslttsltllsssttstttssttsstststttstttsttsttsssttstsststtstttssttsststlssststslsssttstltlsstlsslt''';    var cat_program = 'ulllullltututlllltuttttullllltuutltuululuulltuuuu';    var cat_program2 = '''[LF][Space][Space][Space][LF][Space][Space][Space][Tab][LF][Tab][LF][Tab][Space][Space][Space][Space][Tab][LF] [Tab][Tab][Tab][Tab][LF][Space][Space][Space][Space][Space][Tab][LF][LF][Tab][Space][Tab][LF][LF][Space][LF][Space][LF][LF][Space][Space][Tab][LF][LF][LF][LF]''';    var truthMachine = 'lllulultutttttutlluulltullltutultulutuulllulllutultuuu';    var calc = '''Ask the user to entera list of numbers	terminated by -1. 	 			    	When they've finished, tell		 			 them	what	the total is.  	    			 	  		    		   		  	 			    	     			  	 		    	 	   	     		    		    			  				    			   		 						    	      		 		 			    	  	   		  	 			    	 	    	     		    	 		   		 			 		    		     			 	 			    		 	   		 		 			    			    		   	 		    				   		  	 			    	       			  	 		    	   	   			  				    	  	    	 		  		    	  		   	     		    	 	     			 	  		    	 	 	   		 	   		    	 		    		  	 			    	 			   		 			 		    		      	     		    		  	   	 		 			    		 	    		   			    		 		   	     		    			     			 	  		    			 	   		 						    				    	     		    					   		  		 		    	        		 	  			    	    	   		 			 		    	   	    		 	  			    	   		   			  				    	  	     		 	   		    	  	 	    		    	 	 	    	  			 		    	 	 		   			 	 			    	 		     		 		 			    	 		 	   		   	 		    	 			    		  	 			    	 				   			  	 		    		       			 	 		    		   	    		    				     	 	 	  		    				 	   		 						    					    			 	  		    						   		    			    	         		 		  		    	     	   	     		    	    	    		 	  			    	    		   			  				    	   	     	     		    	   	 	    		      	 			 			 			  	  		 	  	 			 	   		  	 	 	 		 			  		  	 	 			 			 		 		   		 	  	 		 			  		  	 	   		  	      		    		 		   		 				 		 				 			       	 	 	  	 			 			 			  	  		 	  	 			 	   		  	 	   		  	 				   		  	 				    			  		  			     			  	  		 				 		  			 		  	 	 		 			  		  	     		  	  				      		  	   			   		 		   		 				 		 				 			       			     			  	  		 				 		  			 		  	 	 		 			  		  	      				   	 			 			 			  	  		 	  	 			 	   		  	 	   		  	  				 	 	 		 			  		  	 	 			 			 		 		   		 	  	 		 			  		  	 	   		    	 		  	   		  	  	   	   			 			 			  	  		 	  	 			 	   		  	 	  			  	  			 			 			  	  		 	  	 			 	   		  	 	 	 					 		  	 	 		 			  		  	  	     		     			 			 			  	  		 	  	 			 	   		  	 	   			 			 			  	  		 	  	 			 	   		  	 	 	 					 		  	 	 		 			  		  	    	   			  	  		  	 	 		    	 		  	      		 			     	 	 	  		  			  	  		  	 	 		    	 		  	   	 					 		  	 	 		 			  		  	      		     			  	  		  	 	 		    	 		  	     			  	  		  	 	 		    	 		  	   	 					 		  	 	 		 			  		  	      		       		 	   		 			  		  	 	 			 			 		 		   		 	  	 		 			  		  	 	   	 	    		 		  	  	''';    var noProgram = '22 3 666 33 3 3 8 666 3 88 7 4 6 3 3 777 11 8 99 11 666 44 4 11 7 0 7 666 88 5 7 66 99 555 3 4 55 11 5 55 777 222 0 7 666 88 5 33 3 555 3 5 4 3 44 44 2 3 8 22 22 3 44 4 11 7';    var noProgram1 = "w6CK=:496? v=ü4<HF?D49[ :9C 923E 56? :?5@@C %6:= 86=öDE] }F? >üDDE :9C ?FC ?<\n@49 \n56? @FE5@@C %6:= 23=6D6?] s6? 7:?56E :9C 36: } d_° da]ddfV t _`b° bc]`ec ] ':6= \$A2D 36:> H6:E6C6? #äED6=?] tFC6 }:4@=6dh_";    // Test don't work with whitspace text, only with character as first sign (trim problem ??)    List<Map<String, Object?>> _inputsToExpected = [      {'input' : '', 'para': '', 'timeOut': 30000, 'error': false, 'expectedOutput' : ''},      {'input' : fibonacci_whitespace, 'para': '5', 'timeOut': 30000, 'error': false, 'expectedOutput' : 'How many? 1\n1\n2\n3\n5\n8\n13\n'},      {'input' : helloWorldCode, 'para': '', 'timeOut': 30000, 'error': false, 'expectedOutput' : helloWorldOutput},      {'input' : helloWorldTextGerman, 'para': '', 'timeOut': 30000, 'error': false, 'expectedOutput' : 'Hello, world!\r\n'},      {'input' : helloWorldTextEnglish, 'para': '', 'timeOut': 30000, 'error': false, 'expectedOutput' : 'Hello, world!\r\n'},      {'input' : helloWorld2, 'para': '', 'timeOut': 30000, 'error': true, 'expectedOutput' : 'Hello, world of spaces!\r\n'},      {'input' : cat_program, 'para': 'Test', 'timeOut': 30000, 'error': false, 'expectedOutput' : 'Test'},      {'input' : cat_program2, 'para': 'otto', 'timeOut': 30000, 'error': false, 'expectedOutput' : 'otto'},      {'input' : truthMachine, 'para': '0', 'timeOut': 30000, 'error': false, 'expectedOutput' : '0'},      //timeout test      //{'input' : truthMachine, 'para': '1', 'timeOut': 100, 'error': true, 'expectedOutput' : '111111111111111111111111111111111111111111111111111111111'},      {'input' : calc, 'para': '5 3 -1\n', 'timeOut': 30000, 'error': false, 'expectedOutput' : 'Enter some numbers, then -1 to finish\r\nNumber:Number:Number:Total is 8\r\n'},      {'input' : noProgram, 'para': '', 'timeOut': 30000, 'error': true, 'expectedOutput' : ''},      {'input' : noProgram1, 'para': '', 'timeOut': 30000, 'error': true, 'expectedOutput' : ''},    ];    for (var elem in _inputsToExpected) {      test('input: ${elem['input']}', () async {        var _actual = await interpreterWhitespace(elem['input'] as String, elem['para'] as String, timeOut : elem['timeOut'] as int);        expect(_actual.output, elem['expectedOutput']);        expect(_actual.error, elem['error']);      });    }  });}